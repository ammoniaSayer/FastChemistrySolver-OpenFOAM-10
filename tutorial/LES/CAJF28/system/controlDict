/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     reactingFoam;

startFrom       startTime;

startTime       0.0;

stopAt          endTime;

endTime         2e-3;

deltaT          2e-06;

writeControl    timeStep;

writeInterval   2000;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   10;

runTimeModifiable false;

adjustTimeStep  no;

maxCo           1.0;

libs
(
"libturbulentGenerator.so"
    "libFastChemistryModel.so"
    "libutilityFunctionObjects.so"
);

functions
{
    probes
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        writeControl   timeStep;
        writeInterval  1;

        fields
        (
            T
        );

        probeLocations
        (
            ( 0.00229 0.003 0 )
        );

    } 

    fieldAverage1
    {
        type            fieldAverage;
        libs            ("libfieldFunctionObjects.so");
        enabled         true;
        writeControl   outputTime;
	    resetOnRestart  false;

        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            f
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
            
            TTARGET
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            NH3
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            H2
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            H2O
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            N2
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            Ksgs
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
            R
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );
    }

    surfaceSampling
    {
        // Sample near-wall velocity

        type surfaces;

        // Where to load it from (if not already in solver)
        functionObjectLibs ("libsampling.so");
        enabled         true;
        writeControl   timeStep;
        writeInterval  1;

        interpolationScheme cellPoint;

        surfaceFormat vtk;

        // Fields to be sampled
        fields
        (
           p U T NH3 NH
        );

        surfaces
        (
            interface
            {
                type            plane;
                planeType       pointAndNormal;
                pointAndNormalDict
                {
                        point   (0 0 0);
                        normal  (0 1 0);
                }
                basePoint       (0 0 0);
                normalVector    (0 1 0);
                interpolate     false;
            }
        );
    } 
}

// ************************************************************************* //
